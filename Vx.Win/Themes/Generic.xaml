<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:views="using:Vx.Uwp.Views"
    xmlns:local="using:InterfacesUWP"
    xmlns:calendarFolder="using:InterfacesUWP.CalendarFolder"
    xmlns:arrowButtonFolder="using:InterfacesUWP.ArrowButtonFolder"
    xmlns:viewModelPresenters="using:InterfacesUWP.ViewModelPresenters">

    <ResourceDictionary.ThemeDictionaries>
        <ResourceDictionary x:Key="Default">

            <SolidColorBrush x:Key="CalendarSquareBackgroundOtherMonth" Color="#E4E4E4"/>
            <SolidColorBrush x:Key="CalendarSquareBackgroundOtherMonthMouseDown" Color="#C8C8C8"/>

            <SolidColorBrush x:Key="CalendarSquareBackgroundThisMonth" Color="#F0F0F0"/>
            <SolidColorBrush x:Key="CalendarSquareBackgroundThisMonthMouseDown" Color="#C8C8C8"/>

            <SolidColorBrush x:Key="CalendarSquareBackgroundToday" Color="#757575"/>
            <SolidColorBrush x:Key="CalendarSquareBackgroundTodayMouseDown" Color="#616161"/>

            <SolidColorBrush x:Key="CalendarSquareForegroundNormal" Color="#606060"/>
            <SolidColorBrush x:Key="CalendarSquareForegroundToday" Color="White"/>

            <SolidColorBrush x:Key="CalendarSelectedBrush" Color="#2E366D"/>



            <SolidColorBrush x:Key="ArrowButtonBackgroundNormal" Color="#E7E7E7"/>
            <SolidColorBrush x:Key="ArrowButtonBackgroundHover" Color="#D8D8D8"/>
            <SolidColorBrush x:Key="ArrowButtonBackgroundMouseDown" Color="#5C5C5C"/>

            <SolidColorBrush x:Key="ArrowButtonForegroundNormal" Color="#5C5C5C"/>
            <SolidColorBrush x:Key="ArrowButtonForegroundMouseDown" Color="White"/>

            <SolidColorBrush x:Key="ItemBackground">#EFEFEF</SolidColorBrush>

        </ResourceDictionary>

        <ResourceDictionary x:Key="Dark">

            <SolidColorBrush x:Key="CalendarSquareBackgroundOtherMonth" Color="#1B1B1B"/>
            <SolidColorBrush x:Key="CalendarSquareBackgroundOtherMonthMouseDown" Color="#373737"/>

            <SolidColorBrush x:Key="CalendarSquareBackgroundThisMonth" Color="#0F0F0F"/>
            <SolidColorBrush x:Key="CalendarSquareBackgroundThisMonthMouseDown" Color="#373737"/>

            <SolidColorBrush x:Key="CalendarSquareBackgroundToday" Color="#353535"/>
            <SolidColorBrush x:Key="CalendarSquareBackgroundTodayMouseDown" Color="#505050"/>

            <SolidColorBrush x:Key="CalendarSquareForegroundNormal" Color="#9F9F9F"/>
            <SolidColorBrush x:Key="CalendarSquareForegroundToday" Color="#BFBFBF"/>

            <SolidColorBrush x:Key="CalendarSelectedBrush" Color="#6D81FF"/>



            <SolidColorBrush x:Key="ArrowButtonBackgroundNormal" Color="#181818"/>
            <SolidColorBrush x:Key="ArrowButtonBackgroundHover" Color="#272727"/>
            <SolidColorBrush x:Key="ArrowButtonBackgroundMouseDown" Color="#A3A3A3"/>

            <SolidColorBrush x:Key="ArrowButtonForegroundNormal" Color="#A3A3A3"/>
            <SolidColorBrush x:Key="ArrowButtonForegroundMouseDown" Color="Black"/>

            <SolidColorBrush x:Key="ItemBackground">#333333</SolidColorBrush>

        </ResourceDictionary>
    </ResourceDictionary.ThemeDictionaries>

    <SolidColorBrush x:Key="ItemBackgroundHoverLight">#EBEBEB</SolidColorBrush>
    <SolidColorBrush x:Key="ItemBackgroundPressedLight">#E9E9E9</SolidColorBrush>

    <viewModelPresenters:ViewModelToViewConverter x:Key="ViewModelToViewConverter"/>

    <Style x:Key="HeaderedGridViewHeaderContainer" TargetType="GridViewItem">
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
        <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="TabNavigation" Value="Local"/>
        <Setter Property="IsHoldingEnabled" Value="False"/>
        <!--Was true-->
        <Setter Property="Margin" Value="0,0,2,2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GridViewItem">
                    <GridViewItemPresenter CheckHintBrush="{ThemeResource ListViewItemCheckHintThemeBrush}" CheckBrush="{ThemeResource ListViewItemCheckThemeBrush}" ContentMargin="4" ContentTransitions="{TemplateBinding ContentTransitions}" CheckSelectingBrush="{ThemeResource ListViewItemCheckSelectingThemeBrush}" DragForeground="{ThemeResource ListViewItemDragForegroundThemeBrush}" DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}" DragBackground="{ThemeResource ListViewItemDragBackgroundThemeBrush}" DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}" FocusBorderBrush="{ThemeResource ListViewItemFocusBorderThemeBrush}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" PointerOverBackgroundMargin="1" PlaceholderBackground="{ThemeResource ListViewItemPlaceholderBackgroundThemeBrush}" PointerOverBackground="{ThemeResource ListViewItemPointerOverBackgroundThemeBrush}" ReorderHintOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" SelectedPointerOverBorderBrush="{ThemeResource ListViewItemSelectedPointerOverBorderThemeBrush}" SelectionCheckMarkVisualEnabled="True" SelectedForeground="Transparent" SelectedPointerOverBackground="Transparent" SelectedBorderThickness="0" SelectedBackground="Transparent" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="arrowButtonFolder:ArrowButtonBase">

        <Setter Property="BackgroundNormal" Value="{ThemeResource ArrowButtonBackgroundNormal}"/>
        <Setter Property="BackgroundHover" Value="{ThemeResource ArrowButtonBackgroundHover}"/>
        <Setter Property="BackgroundMouseDown" Value="{ThemeResource ArrowButtonBackgroundMouseDown}"/>

        <Setter Property="ForegroundNormal" Value="{ThemeResource ArrowButtonForegroundNormal}"/>
        <Setter Property="ForegroundMouseDown" Value="{ThemeResource ArrowButtonForegroundMouseDown}"/>

        <Setter Property="Height" Value="40"/>
        <Setter Property="Width" Value="45"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="arrowButtonFolder:ArrowButtonBase">
                    <Border Background="{TemplateBinding Background}" Height="40" Width="45">
                        <TextBlock
                            Text="{TemplateBinding Character}"
                            Foreground="{TemplateBinding Foreground}"
                            FontSize="18"
                            FontWeight="Bold"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center">

                            <TextBlock.RenderTransform>
                                <ScaleTransform
                                    ScaleY="1.5"
                                    CenterY="17"/>
                            </TextBlock.RenderTransform>

                        </TextBlock>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>


    <Style TargetType="calendarFolder:TCalendarView">

        <Setter Property="SquareBackgroundOtherMonth" Value="{ThemeResource CalendarSquareBackgroundOtherMonth}"/>
        <Setter Property="SquareBackgroundOtherMonthMouseDown" Value="{ThemeResource CalendarSquareBackgroundOtherMonthMouseDown}"/>

        <Setter Property="SquareBackgroundThisMonth" Value="{ThemeResource CalendarSquareBackgroundThisMonth}"/>
        <Setter Property="SquareBackgroundThisMonthMouseDown" Value="{ThemeResource CalendarSquareBackgroundThisMonthMouseDown}"/>

        <Setter Property="SquareBackgroundToday" Value="{ThemeResource CalendarSquareBackgroundToday}"/>
        <Setter Property="SquareBackgroundTodayMouseDown" Value="{ThemeResource CalendarSquareBackgroundTodayMouseDown}"/>

        <Setter Property="SquareForegroundNormal" Value="{ThemeResource CalendarSquareForegroundNormal}"/>
        <Setter Property="SquareForegroundToday" Value="{ThemeResource CalendarSquareForegroundToday}"/>

        <Setter Property="SelectedBrush" Value="{ThemeResource CalendarSelectedBrush}"/>

        <!--White-->
        <Setter Property="GridBackground" Value="{ThemeResource SystemAltHighColor}"/>

        <Setter Property="GridDayHeaderBackground" Value="{ThemeResource CalendarSquareBackgroundThisMonth}"/>
        <Setter Property="GridCalendarHeaderBackground" Value="{ThemeResource CalendarSquareBackgroundThisMonth}"/>

        <Setter Property="GridDayHeaderForeground" Value="{ThemeResource CalendarSquareForegroundNormal}"/>
        <Setter Property="GridCalendarHeaderForeground" Value="{ThemeResource CalendarSquareForegroundNormal}"/>


    </Style>

    <Style TargetType="views:TransparentButton">
        <Setter Property="Background" Value="{ThemeResource ApplicationForegroundThemeBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="ButtonBackground.Opacity" Value="0.1" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="ButtonBackground.Opacity" Value="0.2" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="PointerFocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="Border" Background="Transparent">
                            <Rectangle
                                                x:Name="ButtonBackground"
                                                Opacity="0"
                                                Fill="{TemplateBinding Background}"/>
                            <ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="views:TransparentButtonWithHoverBorder">
        <Setter Property="Background" Value="{ThemeResource ApplicationForegroundThemeBrush}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource ButtonPointerOverBackgroundThemeBrush}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource ButtonPressedBackgroundThemeBrush}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="PointerFocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border" Background="Transparent" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="Transparent">
                            <ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <Rectangle x:Name="FocusVisualWhite" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="1.5" StrokeEndLineCap="Square" Stroke="{ThemeResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashArray="1,1"/>
                        <Rectangle x:Name="FocusVisualBlack" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="0.5" StrokeEndLineCap="Square" Stroke="{ThemeResource FocusVisualBlackStrokeThemeBrush}" StrokeDashArray="1,1"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ItemButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{ThemeResource ItemBackground}"/>
        <Setter Property="BorderThickness" Value="1,1,4,4"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <SolidColorBrush Color="Black" Opacity="0.2"/>
            </Setter.Value>
        </Setter>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="Border.Background" Value="{StaticResource ItemBackgroundHoverLight}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="Border.Background" Value="{StaticResource ItemBackgroundPressedLight}"/>
                                        <Setter Target="Border.BorderThickness" Value="2,2,2,3"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <!--<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonDisabledBackgroundThemeBrush}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Border">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonDisabledBorderThemeBrush}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonDisabledForegroundThemeBrush}"/>
                                                        </ObjectAnimationUsingKeyFrames>-->
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <!--<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite"/>
                                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>-->
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="PointerFocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                            <ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <!--<Rectangle x:Name="FocusVisualWhite" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="1.5" StrokeEndLineCap="Square" Stroke="{ThemeResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashArray="1,1"/>
                                        <Rectangle x:Name="FocusVisualBlack" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="0.5" StrokeEndLineCap="Square" Stroke="{ThemeResource FocusVisualBlackStrokeThemeBrush}" StrokeDashArray="1,1"/>-->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
