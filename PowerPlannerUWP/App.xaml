<interfacesApp:NativeUwpApplication
    xmlns:interfacesApp="using:InterfacesUWP.App"
    x:Class="PowerPlannerUWP.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:PowerPlannerUWP"
    xmlns:localconverters="using:PowerPlannerUWP.Converters"
    xmlns:converters="using:InterfacesUWP.Converters"
    xmlns:taskOrEventViews="using:PowerPlannerUWP.Views.TaskOrEventViews"
    xmlns:calendarViews="using:PowerPlannerUWP.Views.CalendarViews"
    xmlns:scheduleViews="using:PowerPlannerUWP.Views.ScheduleViews">



    <Application.Resources>

        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Themes/Generic.xaml"/>

                <ResourceDictionary>


                    <Style x:Key="WelcomeButtonStyle" TargetType="Button">
                        <Setter Property="Height" Value="40"/>
                        <Setter Property="HorizontalAlignment" Value="Stretch"/>
                        <Setter Property="Background" Value="{StaticResource PowerPlannerSecondaryBlue}"/>
                        <Setter Property="RequestedTheme" Value="Dark"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Grid x:Name="RootGrid" Background="{TemplateBinding Background}">
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualState x:Name="Normal">
                                                    <Storyboard>
                                                        <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="PointerOver">
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="RootGrid">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PowerPlannerBlueHover}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Pressed">
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="RootGrid">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PowerPlannerBlueSelected}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <PointerDownThemeAnimation Storyboard.TargetName="RootGrid"/>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Disabled">
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="RootGrid">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PowerPlannerDarkerBlue}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        <ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="ListViewHorizontalStyle" TargetType="ListView">
                        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
                        <Setter Property="ScrollViewer.VerticalScrollMode" Value="Disabled"/>
                        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                        <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Enabled"/>
                        <Setter Property="ItemsPanel">
                            <Setter.Value>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal"/>
                                </ItemsPanelTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Color x:Key="SidebarBackgroundColor">#F4F4F4</Color>
                    <SolidColorBrush Color="{StaticResource SidebarBackgroundColor}" x:Key="SidebarBackground"/>
                    <Color x:Key="PowerPlannerBlueColor">#2E366D</Color>
                    <SolidColorBrush Color="{StaticResource PowerPlannerBlueColor}" x:Key="PowerPlannerBlue"/>
                    <SolidColorBrush x:Key="PowerPlannerSecondaryBlue" Color="#546BC7"/>
                    <SolidColorBrush x:Key="PowerPlannerBlueSelected" Color="#546BC7"/>
                    <SolidColorBrush x:Key="PowerPlannerBlueHover" Color="#4B60B3"/>
                    <SolidColorBrush x:Key="PowerPlannerDarkerBlue">#1F2656</SolidColorBrush>
                    <SolidColorBrush x:Key="TaskOrEventBrush" Color="#546BC7"/>


                    <Style x:Key="SideBarOptionTextStyle" TargetType="TextBlock" BasedOn="{StaticResource SubtitleTextBlockStyle}">
                        <Setter Property="Foreground" Value="White"/>
                        <!--<Setter Property="FontSize" Value="24"/>-->
                        <Setter Property="FontWeight" Value="SemiLight"/>
                        <Setter Property="TextWrapping" Value="NoWrap"/>
                        <Setter Property="Margin" Value="36,0,0,4"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                    </Style>

                    <Style x:Key="SideBarSubOptionTextStyle" TargetType="TextBlock" BasedOn="{StaticResource BodyTextBlockStyle}">
                        <Setter Property="Foreground" Value="White"/>
                        <!--<Setter Property="FontSize" Value="20"/>-->
                        <Setter Property="TextWrapping" Value="NoWrap"/>
                        <Setter Property="Margin" Value="60,8,0,8"/>
                    </Style>

                    <Style x:Key="SideBarBottomOptionTextStyle" TargetType="TextBlock" BasedOn="{StaticResource SideBarOptionTextStyle}">
                        <Setter Property="FontSize" Value="20"/>
                    </Style>


                    <Style x:Key="SubtleTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlockStyle}">
                        <Setter Property="Foreground" Value="{StaticResource ApplicationSecondaryForegroundThemeBrush}"/>
                    </Style>

                    <Style x:Key="MyTextBoxStyle" TargetType="TextBox">
                        <Setter Property="Margin" Value="6,0,6,6"/>
                    </Style>

                    <Style x:Key="WhiteProgressBarStyle" TargetType="ProgressBar">
                        <Setter Property="Foreground" Value="{ThemeResource ProgressBarForegroundThemeBrush}"/>
                        <Setter Property="Background" Value="{ThemeResource ProgressBarBackgroundThemeBrush}"/>
                        <Setter Property="BorderBrush" Value="{ThemeResource ProgressBarBorderThemeBrush}"/>
                        <Setter Property="BorderThickness" Value="{ThemeResource ProgressBarBorderThemeThickness}"/>
                        <Setter Property="Maximum" Value="100"/>
                        <Setter Property="MinHeight" Value="{ThemeResource ProgressBarThemeMinHeight}"/>
                        <Setter Property="IsTabStop" Value="False"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ProgressBar">
                                    <Grid>
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualStateGroup.Transitions>
                                                    <VisualTransition From="Updating" To="Determinate">
                                                        <Storyboard>
                                                            <RepositionThemeAnimation FromHorizontalOffset="{Binding TemplateSettings.IndicatorLengthDelta, RelativeSource={RelativeSource Mode=TemplatedParent}}" TargetName="ProgressBarIndicator"/>
                                                        </Storyboard>
                                                    </VisualTransition>
                                                    <VisualTransition From="Paused" To="Determinate">
                                                        <Storyboard>
                                                            <DoubleAnimation Duration="0:0:0.25" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ProgressBarIndicator"/>
                                                        </Storyboard>
                                                    </VisualTransition>
                                                    <VisualTransition From="Indeterminate">
                                                        <Storyboard>
                                                            <FadeInThemeAnimation TargetName="EllipseGrid"/>
                                                        </Storyboard>
                                                    </VisualTransition>
                                                </VisualStateGroup.Transitions>
                                                <VisualState x:Name="Determinate"/>
                                                <VisualState x:Name="Updating"/>
                                                <VisualState x:Name="Indeterminate">
                                                    <Storyboard RepeatBehavior="Forever">
                                                        <DoubleAnimation Duration="0:0:3.917" From="{Binding TemplateSettings.ContainerAnimationStartPosition, RelativeSource={RelativeSource Mode=TemplatedParent}}" To="{Binding TemplateSettings.ContainerAnimationEndPosition, RelativeSource={RelativeSource Mode=TemplatedParent}}" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="EllipseGrid"/>
                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="E1">
                                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                            <SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:1" Value="{Binding TemplateSettings.EllipseAnimationWellPosition, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                                            <EasingDoubleKeyFrame KeyTime="0:0:2" Value="{Binding TemplateSettings.EllipseAnimationWellPosition, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                                            <SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:3" Value="{Binding TemplateSettings.EllipseAnimationEndPosition, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                                        </DoubleAnimationUsingKeyFrames>
                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="E2">
                                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.167" Value="0"/>
                                                            <SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:1.167" Value="{Binding TemplateSettings.EllipseAnimationWellPosition, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                                            <EasingDoubleKeyFrame KeyTime="0:0:2.167" Value="{Binding TemplateSettings.EllipseAnimationWellPosition, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                                            <SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:3.167" Value="{Binding TemplateSettings.EllipseAnimationEndPosition, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                                        </DoubleAnimationUsingKeyFrames>
                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="E3">
                                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.333" Value="0"/>
                                                            <SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:1.333" Value="{Binding TemplateSettings.EllipseAnimationWellPosition, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                                            <EasingDoubleKeyFrame KeyTime="0:0:2.333" Value="{Binding TemplateSettings.EllipseAnimationWellPosition, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                                            <SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:3.333" Value="{Binding TemplateSettings.EllipseAnimationEndPosition, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                                        </DoubleAnimationUsingKeyFrames>
                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="E4">
                                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
                                                            <SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:1.5" Value="{Binding TemplateSettings.EllipseAnimationWellPosition, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                                            <EasingDoubleKeyFrame KeyTime="0:0:2.5" Value="{Binding TemplateSettings.EllipseAnimationWellPosition, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                                            <SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:3.5" Value="{Binding TemplateSettings.EllipseAnimationEndPosition, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                                        </DoubleAnimationUsingKeyFrames>
                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="E5">
                                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.667" Value="0"/>
                                                            <SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:1.667" Value="{Binding TemplateSettings.EllipseAnimationWellPosition, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                                            <EasingDoubleKeyFrame KeyTime="0:0:2.667" Value="{Binding TemplateSettings.EllipseAnimationWellPosition, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                                            <SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:3.667" Value="{Binding TemplateSettings.EllipseAnimationEndPosition, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                                        </DoubleAnimationUsingKeyFrames>
                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="B1">
                                                            <EasingDoubleKeyFrame KeyTime="0" Value="-50"/>
                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
                                                            <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0"/>
                                                            <EasingDoubleKeyFrame KeyTime="0:0:3" Value="100"/>
                                                        </DoubleAnimationUsingKeyFrames>
                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="B2">
                                                            <EasingDoubleKeyFrame KeyTime="0" Value="-50"/>
                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.667" Value="0"/>
                                                            <EasingDoubleKeyFrame KeyTime="0:0:2.167" Value="0"/>
                                                            <EasingDoubleKeyFrame KeyTime="0:0:3.167" Value="100"/>
                                                        </DoubleAnimationUsingKeyFrames>
                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="B3">
                                                            <EasingDoubleKeyFrame KeyTime="0" Value="-50"/>
                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.833" Value="0"/>
                                                            <EasingDoubleKeyFrame KeyTime="0:0:2.333" Value="0"/>
                                                            <EasingDoubleKeyFrame KeyTime="0:0:3.333" Value="100"/>
                                                        </DoubleAnimationUsingKeyFrames>
                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="B4">
                                                            <EasingDoubleKeyFrame KeyTime="0" Value="-50"/>
                                                            <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0"/>
                                                            <EasingDoubleKeyFrame KeyTime="0:0:2.5" Value="0"/>
                                                            <EasingDoubleKeyFrame KeyTime="0:0:3.5" Value="100"/>
                                                        </DoubleAnimationUsingKeyFrames>
                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="B5">
                                                            <EasingDoubleKeyFrame KeyTime="0" Value="-50"/>
                                                            <EasingDoubleKeyFrame KeyTime="0:0:1.167" Value="0"/>
                                                            <EasingDoubleKeyFrame KeyTime="0:0:2.667" Value="0"/>
                                                            <EasingDoubleKeyFrame KeyTime="0:0:3.667" Value="100"/>
                                                        </DoubleAnimationUsingKeyFrames>
                                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="EllipseGrid"/>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="E1">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="White"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="E2">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="White"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="E3">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="White"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="E4">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="White"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="E5">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="White"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <FadeOutThemeAnimation TargetName="DeterminateRoot"/>
                                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DeterminateRoot"/>
                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="E1">
                                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                            <EasingDoubleKeyFrame KeyTime="0:0:3" Value="1"/>
                                                            <EasingDoubleKeyFrame KeyTime="0:0:3" Value="0"/>
                                                        </DoubleAnimationUsingKeyFrames>
                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="E2">
                                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.167" Value="0"/>
                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.167" Value="1"/>
                                                            <EasingDoubleKeyFrame KeyTime="0:0:3.167" Value="1"/>
                                                            <EasingDoubleKeyFrame KeyTime="0:0:3.167" Value="0"/>
                                                        </DoubleAnimationUsingKeyFrames>
                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="E3">
                                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.333" Value="0"/>
                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.333" Value="1"/>
                                                            <EasingDoubleKeyFrame KeyTime="0:0:3.333" Value="1"/>
                                                            <EasingDoubleKeyFrame KeyTime="0:0:3.333" Value="0"/>
                                                        </DoubleAnimationUsingKeyFrames>
                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="E4">
                                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
                                                            <EasingDoubleKeyFrame KeyTime="0:0:3.5" Value="1"/>
                                                            <EasingDoubleKeyFrame KeyTime="0:0:3.5" Value="0"/>
                                                        </DoubleAnimationUsingKeyFrames>
                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="E5">
                                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.667" Value="0"/>
                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.667" Value="1"/>
                                                            <EasingDoubleKeyFrame KeyTime="0:0:3.667" Value="1"/>
                                                            <EasingDoubleKeyFrame KeyTime="0:0:3.667" Value="0"/>
                                                        </DoubleAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Error">
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ProgressBarIndicator">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Paused">
                                                    <Storyboard>
                                                        <DoubleAnimation Duration="0:0:0.25" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ProgressBarIndicator"/>
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        <Grid x:Name="EllipseGrid" Opacity="0">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RenderTransform>
                                                <TranslateTransform/>
                                            </Grid.RenderTransform>
                                            <Border x:Name="B1" Grid.Column="8" RenderTransformOrigin="0.5,0.5">
                                                <Border.RenderTransform>
                                                    <TranslateTransform/>
                                                </Border.RenderTransform>
                                                <Ellipse x:Name="E1" Fill="{TemplateBinding Foreground}" Height="{Binding TemplateSettings.EllipseDiameter, RelativeSource={RelativeSource Mode=TemplatedParent}}" RenderTransformOrigin="0.5,0.5" Width="{Binding TemplateSettings.EllipseDiameter, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                                    <Ellipse.RenderTransform>
                                                        <TranslateTransform/>
                                                    </Ellipse.RenderTransform>
                                                </Ellipse>
                                            </Border>
                                            <Rectangle Grid.Column="7" Width="{Binding TemplateSettings.EllipseOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                            <Border x:Name="B2" Grid.Column="6" RenderTransformOrigin="0.5,0.5">
                                                <Border.RenderTransform>
                                                    <TranslateTransform/>
                                                </Border.RenderTransform>
                                                <Ellipse x:Name="E2" Fill="{TemplateBinding Foreground}" Height="{Binding TemplateSettings.EllipseDiameter, RelativeSource={RelativeSource Mode=TemplatedParent}}" RenderTransformOrigin="0.5,0.5" Width="{Binding TemplateSettings.EllipseDiameter, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                                    <Ellipse.RenderTransform>
                                                        <TranslateTransform/>
                                                    </Ellipse.RenderTransform>
                                                </Ellipse>
                                            </Border>
                                            <Rectangle Grid.Column="5" Width="{Binding TemplateSettings.EllipseOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                            <Border x:Name="B3" Grid.Column="4" RenderTransformOrigin="0.5,0.5">
                                                <Border.RenderTransform>
                                                    <TranslateTransform/>
                                                </Border.RenderTransform>
                                                <Ellipse x:Name="E3" Fill="{TemplateBinding Foreground}" Height="{Binding TemplateSettings.EllipseDiameter, RelativeSource={RelativeSource Mode=TemplatedParent}}" RenderTransformOrigin="0.5,0.5" Width="{Binding TemplateSettings.EllipseDiameter, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                                    <Ellipse.RenderTransform>
                                                        <TranslateTransform/>
                                                    </Ellipse.RenderTransform>
                                                </Ellipse>
                                            </Border>
                                            <Rectangle Grid.Column="3" Width="{Binding TemplateSettings.EllipseOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                            <Border x:Name="B4" Grid.Column="2" RenderTransformOrigin="0.5,0.5">
                                                <Border.RenderTransform>
                                                    <TranslateTransform/>
                                                </Border.RenderTransform>
                                                <Ellipse x:Name="E4" Fill="{TemplateBinding Foreground}" Height="{Binding TemplateSettings.EllipseDiameter, RelativeSource={RelativeSource Mode=TemplatedParent}}" RenderTransformOrigin="0.5,0.5" Width="{Binding TemplateSettings.EllipseDiameter, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                                    <Ellipse.RenderTransform>
                                                        <TranslateTransform/>
                                                    </Ellipse.RenderTransform>
                                                </Ellipse>
                                            </Border>
                                            <Rectangle Grid.Column="1" Width="{Binding TemplateSettings.EllipseOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                            <Border x:Name="B5" Grid.Column="0" RenderTransformOrigin="0.5,0.5">
                                                <Border.RenderTransform>
                                                    <TranslateTransform/>
                                                </Border.RenderTransform>
                                                <Ellipse x:Name="E5" Fill="{TemplateBinding Foreground}" Height="{Binding TemplateSettings.EllipseDiameter, RelativeSource={RelativeSource Mode=TemplatedParent}}" RenderTransformOrigin="0.5,0.5" Width="{Binding TemplateSettings.EllipseDiameter, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                                    <Ellipse.RenderTransform>
                                                        <TranslateTransform/>
                                                    </Ellipse.RenderTransform>
                                                </Ellipse>
                                            </Border>
                                        </Grid>
                                        <Border x:Name="DeterminateRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                                            <Rectangle x:Name="ProgressBarIndicator" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Left" Margin="{TemplateBinding Padding}"/>
                                        </Border>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="PowerPlannerBlueButtonStyle" TargetType="Button">
                        <Setter Property="Background" Value="{StaticResource PowerPlannerBlue}"/>
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="Padding" Value="11,7"/>
                        <Setter Property="FontWeight" Value="SemiBold"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Grid>
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualState x:Name="Normal"/>
                                                <VisualState x:Name="PointerOver">
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PowerPlannerBlueHover}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Pressed">
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PowerPlannerBlueSelected}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Disabled">
                                                    <Storyboard>
                                                        <!--<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonDisabledBackgroundThemeBrush}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Border">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonDisabledBorderThemeBrush}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonDisabledForegroundThemeBrush}"/>
                                                        </ObjectAnimationUsingKeyFrames>-->
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                            <VisualStateGroup x:Name="FocusStates">
                                                <VisualState x:Name="Focused">
                                                    <Storyboard>
                                                        <!--<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite"/>
                                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>-->
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Unfocused"/>
                                                <VisualState x:Name="PointerFocused"/>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        <Border x:Name="Border" Background="{TemplateBinding Background}">
                                            <ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Border>
                                        <!--<Rectangle x:Name="FocusVisualWhite" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="1.5" StrokeEndLineCap="Square" Stroke="{ThemeResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashArray="1,1"/>
                                        <Rectangle x:Name="FocusVisualBlack" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="0.5" StrokeEndLineCap="Square" Stroke="{ThemeResource FocusVisualBlackStrokeThemeBrush}" StrokeDashArray="1,1"/>-->
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="TransparentButtonStyle" TargetType="Button">
                        <Setter Property="Background" Value="{ThemeResource ApplicationForegroundThemeBrush}"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Grid>
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualState x:Name="Normal"/>
                                                <VisualState x:Name="PointerOver">
                                                    <VisualState.Setters>
                                                        <Setter Target="ButtonBackground.Opacity" Value="0.1" />
                                                    </VisualState.Setters>
                                                </VisualState>
                                                <VisualState x:Name="Pressed">
                                                    <VisualState.Setters>
                                                        <Setter Target="ButtonBackground.Opacity" Value="0.2" />
                                                    </VisualState.Setters>
                                                </VisualState>
                                                <VisualState x:Name="Disabled">
                                                    <Storyboard>
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                            <VisualStateGroup x:Name="FocusStates">
                                                <VisualState x:Name="Focused">
                                                    <Storyboard>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Unfocused"/>
                                                <VisualState x:Name="PointerFocused"/>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        <Grid x:Name="Border" Background="Transparent">
                                            <Rectangle
                                                x:Name="ButtonBackground"
                                                Opacity="0"
                                                Fill="{TemplateBinding Background}"/>
                                            <ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="BlankButtonWithBorderStyle" TargetType="Button">
                        <Setter Property="Background" Value="{ThemeResource ApplicationForegroundThemeBrush}"/>
                        <Setter Property="BorderThickness" Value="2"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Grid>
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualState x:Name="Normal"/>
                                                <VisualState x:Name="PointerOver">
                                                    <VisualState.Setters>
                                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource ButtonPointerOverBackgroundThemeBrush}" />
                                                    </VisualState.Setters>
                                                </VisualState>
                                                <VisualState x:Name="Pressed">
                                                    <VisualState.Setters>
                                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource ButtonPressedBackgroundThemeBrush}" />
                                                    </VisualState.Setters>
                                                </VisualState>
                                                <VisualState x:Name="Disabled">
                                                    <Storyboard>
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                            <VisualStateGroup x:Name="FocusStates">
                                                <VisualState x:Name="Focused">
                                                    <Storyboard>
                                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite"/>
                                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Unfocused"/>
                                                <VisualState x:Name="PointerFocused"/>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        <Border x:Name="Border" Background="Transparent" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="Transparent">
                                            <ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Border>
                                        <Rectangle x:Name="FocusVisualWhite" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="1.5" StrokeEndLineCap="Square" Stroke="{ThemeResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashArray="1,1"/>
                                        <Rectangle x:Name="FocusVisualBlack" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="0.5" StrokeEndLineCap="Square" Stroke="{ThemeResource FocusVisualBlackStrokeThemeBrush}" StrokeDashArray="1,1"/>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <SolidColorBrush x:Key="PowerPlannerCommandBarBackground">#1F2656</SolidColorBrush>

                    <Style x:Key="PowerPlannerCommandBarStyle" TargetType="CommandBar">
                        <Setter Property="Background" Value="{StaticResource PowerPlannerCommandBarBackground}"/>
                        <Setter Property="RequestedTheme" Value="Dark"/>
                    </Style>

                    <Style x:Key="PowerPlannerSecondaryBlueButtonStyle" TargetType="Button" BasedOn="{StaticResource PowerPlannerBlueButtonStyle}">
                        <Setter Property="Background" Value="{StaticResource PowerPlannerSecondaryBlue}"/>
                    </Style>



                    <Style x:Key="SubitemButtonStyle" TargetType="Button" BasedOn="{StaticResource SubitemContainerStyle}">
                        <Setter Property="HorizontalAlignment" Value="Stretch"/>
                        <Setter Property="FontSize" Value="19"/>
                        <Setter Property="FontWeight" Value="SemiLight"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        <Setter Property="Padding" Value="6,3,6,6"/>
                        <Setter Property="Margin" Value="0,12,0,0"/>
                    </Style>

                    <Style x:Key="CheckBoxStyle" TargetType="CheckBox">
                        <Setter Property="FontWeight" Value="SemiLight"/>
                        <Setter Property="Margin" Value="0,12,0,0"/>
                    </Style>

                    <Style x:Key="LargeButtonStyle" TargetType="Button" BasedOn="{StaticResource ItemContainerStyle}">
                        <Setter Property="ContentTemplate">
                            <Setter.Value>
                                <DataTemplate>
                                    <TextBlock
                                        Text="{Binding}"
                                        Style="{ThemeResource TitleTextBlockStyle}"
                                        FontSize="28"
                                        FontWeight="Light"
                                        TextAlignment="Center"
                                        HorizontalAlignment="Stretch"
                                        Margin="4"/>
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="AddItemStyle" TargetType="Button" BasedOn="{StaticResource ItemContainerStyle}">
                        <Setter Property="ContentTemplate">
                            <Setter.Value>
                                <DataTemplate>
                                    <Grid Margin="2,4">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>

                                        <TextBlock
                                            Text="+"
                                            FontSize="50"
                                            FontWeight="SemiLight"
                                            Foreground="{ThemeResource ApplicationSecondaryForegroundThemeBrush}"
                                            VerticalAlignment="Center"
                                            Margin="9,0,8,6"
                                            TextLineBounds="Tight"/>

                                        <TextBlock
                                            Text="{Binding}"
                                            Style="{ThemeResource TitleTextBlockStyle}"
                                            FontSize="28"
                                            FontWeight="Light"
                                            Grid.Column="1"
                                            HorizontalAlignment="Center"
                                            Margin="0,0,4,0"/>
                                    </Grid>
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="AddSubitemStyle" TargetType="Button" BasedOn="{StaticResource SubitemContainerStyle}">
                        <Setter Property="ContentTemplate">
                            <Setter.Value>
                                <DataTemplate>
                                    <Grid Margin="2,4">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>

                                        <TextBlock
                                            Text="+"
                                            FontSize="50"
                                            FontWeight="SemiLight"
                                            Foreground="{ThemeResource ApplicationSecondaryForegroundThemeBrush}"
                                            VerticalAlignment="Center"
                                            Margin="9,0,8,6"
                                            TextLineBounds="Tight"/>

                                        <TextBlock
                                            Text="{Binding}"
                                            Style="{ThemeResource TitleTextBlockStyle}"
                                            FontWeight="Light"
                                            FontSize="28"
                                            Grid.Column="1"
                                            HorizontalAlignment="Center"
                                            Margin="0,0,4,0"/>
                                    </Grid>
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    

                    <Style x:Key="PageBoxStyle" TargetType="Border">
                        <Setter Property="Background" Value="#F4F4F4"/>
                    </Style>



                    <localconverters:PercentCompleteToGridLengthConverter x:Key="PercentCompleteToGridLengthConverter"/>
                    <localconverters:IsCompleteToOpacityConverter x:Key="IsCompleteToOpacityConverter"/>
                    <localconverters:IsCompleteToVisibilityConverter x:Key="IsCompleteToVisibilityConverter"/>

                    <localconverters:CreditsToStringConverter x:Key="CreditsToStringConverter"/>
                    <localconverters:GpaToStringConverter x:Key="GpaToStringConverter"/>
                    <localconverters:GradeToFormatConverter x:Key="GradeToFormatConverter"/>

                    <localconverters:BoolToValidityBrushConverter x:Key="BoolToValidityBrushConverter"/>
                    <localconverters:ItemTypeToDatePrefixConverter x:Key="ItemTypeToDatePrefixConverter"/>

                    <localconverters:IsTaskToVisibilityConverter x:Key="IsTaskToVisibilityConverter"/>

                    <localconverters:StringToImageConverter x:Key="StringToImageConverter"/>
                    <localconverters:StringToImageThumbnailConverter x:Key="StringToImageThumbnailConverter"/>

                    <localconverters:ScheduleWeekToStringConverter x:Key="ScheduleWeekToStringConverter"/>
                    <localconverters:BoolToEnabledStringConverter x:Key="BoolToEnabledStringConverter"/>
                    <localconverters:GpaTypeToStringConverter x:Key="GpaTypeToStringConverter"/>




                    <converters:ColorArrayToColorConverter x:Key="ColorArrayToColorConverter"/>
                    <converters:ColorArrayToBrushConverter x:Key="ColorArrayToBrushConverter"/>
                    <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
                    <converters:StringToVisibilityConverter x:Key="StringToVisibilityConverter"/>
                    <converters:TimeSpanToDateTimeConverter x:Key="TimeSpanToDateTimeConverter"/>
                    <converters:ListToVisibilityConverter x:Key="ListToVisibilityConverter"/>
                    <converters:DateToLongDateConverter x:Key="DateToLongDateConverter"/>
                    <converters:DoubleToBlankStringConverter x:Key="DoubleToBlankStringConverter"/>
                    <converters:NumberToFormatConverter x:Key="NumberToFormatConverter"/>
                    <converters:DateToStringConverter x:Key="DateToStringConverter"/>
                    <converters:ColorToBrushConverter x:Key="ColorToBrushConverter"/>
                    <converters:InvertBoolConverter x:Key="InvertBoolConverter"/>
                    <converters:DayOfWeekToStringConverter x:Key="DayOfWeekToStringConverter"/>
                    <converters:NotNullToVisibilityConverter x:Key="NotNullToVisibilityConverter"/>
                    <converters:DateToTimeConverter x:Key="DateToTimeConverter"/>
                    <converters:StringToUpperCaseConverter x:Key="StringToUpperCaseConverter"/>
                    <converters:EnumToVisibilityConverter x:Key="EnumToVisibilityConverter"/>


                    <Style x:Key="BlankListViewItemContainerStyle" TargetType="ListViewItem">
                        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
                        <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="TabNavigation" Value="Local"/>
                        <Setter Property="IsHoldingEnabled" Value="True"/>
                        <Setter Property="Margin" Value="0"/>
                        <Setter Property="Padding" Value="0"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        <Setter Property="VerticalContentAlignment" Value="Top"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListViewItem">
                                    <ListViewItemPresenter ContentMargin="0" ContentTransitions="{TemplateBinding ContentTransitions}" DragForeground="{ThemeResource ListViewItemDragForegroundThemeBrush}" DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}" DragBackground="{ThemeResource ListViewItemDragBackgroundThemeBrush}" DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="0" PointerOverBackgroundMargin="0" PlaceholderBackground="{ThemeResource ListViewItemPlaceholderBackgroundThemeBrush}" PointerOverBackground="Transparent" ReorderHintOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" SelectionCheckMarkVisualEnabled="False" SelectedForeground="{TemplateBinding Foreground}" SelectedPointerOverBackground="Transparent" SelectedBorderThickness="0" SelectedBackground="Transparent" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" BorderThickness="0"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="BlankListViewStyle" TargetType="ListView">
                        <Setter Property="ItemContainerStyle" Value="{StaticResource BlankListViewItemContainerStyle}"/>
                        <Setter Property="SelectionMode" Value="None"/>
                        <Setter Property="IsSwipeEnabled" Value="False"/>
                    </Style>


                    <Style x:Key="ItemsControlWithAnimationsStyle" TargetType="ItemsControl">

                        <Setter Property="ItemsPanel">
                            <Setter.Value>
                                <ItemsPanelTemplate>
                                    <StackPanel>
                                        <StackPanel.ChildrenTransitions>
                                            <TransitionCollection>
                                                <AddDeleteThemeTransition />
                                            </TransitionCollection>
                                        </StackPanel.ChildrenTransitions>
                                    </StackPanel>
                                </ItemsPanelTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <DataTemplate x:Key="DataTemplateTaskOrEvent">
                        <taskOrEventViews:TaskOrEventListViewItem
                            Margin="0,3"/>
                    </DataTemplate>

                    <DataTemplate x:Key="DataTemplateTaskOrEventWithoutDate">
                        <taskOrEventViews:TaskOrEventListViewItem
                            Margin="0,3"
                            IncludeDate="False"/>
                    </DataTemplate>


                    <DataTemplate x:Key="MainCalendarItemTemplate">
                        <calendarViews:MainCalendarItemView />
                    </DataTemplate>


                    <!-- My class list selector -->
                    <DataTemplate x:Key="DataTemplateClassPicker">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <Rectangle
                                Fill="{Binding Color, Converter={StaticResource ColorToBrushConverter}}"
                                Margin="0,0,6,0"
                                Width="12"
                                Height="12"
                                VerticalAlignment="Center"/>

                            <TextBlock Text="{Binding Name}" Grid.Column="1" VerticalAlignment="Center"/>

                        </Grid>
                    </DataTemplate>

                    <DataTemplate x:Key="DataTemplateHolidaySnapshotItem">
                        <Border Background="#E40089" Margin="0,0,0,1">
                            <TextBlock
                                Text="{Binding Name}"
                                Style="{ThemeResource BodyTextBlockStyle}"
                                Foreground="White"
                                Margin="18,18,0,18"/>
                        </Border>
                    </DataTemplate>

                    <DataTemplate x:Key="DataTemplateHolidayScheduleItem">
                        <scheduleViews:HolidayScheduleItemView />
                    </DataTemplate>



                    <Style x:Key="MyOverflowAppBarStyle" TargetType="AppBarButton">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}"/>
                        <Setter Property="HorizontalAlignment" Value="Stretch"/>
                        <Setter Property="VerticalAlignment" Value="Top"/>
                        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
                        <Setter Property="FontWeight" Value="Normal"/>
                        <Setter Property="Width" Value="Auto"/>
                        <Setter Property="MinWidth" Value="100"/>
                        <Setter Property="MaxWidth" Value="300"/>
                        <Setter Property="UseSystemFocusVisuals" Value="True"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="AppBarButton">
                                    <Grid x:Name="Root" Background="{TemplateBinding Background}" MaxWidth="{TemplateBinding MaxWidth}" MinWidth="{TemplateBinding MinWidth}">
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualState x:Name="Normal">
                                                    <Storyboard>
                                                        <PointerUpThemeAnimation Storyboard.TargetName="OverflowTextLabel"/>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="PointerOver">
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Root">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListLowBrush}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Content">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="OverflowTextLabel">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <PointerUpThemeAnimation Storyboard.TargetName="OverflowTextLabel"/>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Pressed">
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Root">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListMediumBrush}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Content">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="OverflowTextLabel">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <PointerDownThemeAnimation Storyboard.TargetName="OverflowTextLabel"/>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Disabled">
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Content">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="OverflowTextLabel">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                            <VisualStateGroup x:Name="InputModeStates">
                                                <VisualState x:Name="InputModeDefault"/>
                                                <VisualState x:Name="TouchInputMode">
                                                    <VisualState.Setters>
                                                        <Setter Target="OverflowTextLabel.Padding" Value="0,11,0,13"/>
                                                    </VisualState.Setters>
                                                </VisualState>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        <Grid x:Name="ContentRoot" MinHeight="{ThemeResource AppBarThemeCompactHeight}">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <ContentPresenter x:Name="Content" AutomationProperties.AccessibilityView="Raw" Content="{TemplateBinding Icon}" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="Left" Height="20" Margin="0,14,0,4"/>
                                            <TextBlock x:Name="OverflowTextLabel" Grid.Column="1" Foreground="{TemplateBinding Foreground}" FontSize="15" FontFamily="{TemplateBinding FontFamily}" HorizontalAlignment="Stretch" Margin="12,0,12,0" Padding="0,5,0,7" TextWrapping="NoWrap" Text="{TemplateBinding Label}" TextTrimming="Clip" VerticalAlignment="Center"/>
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>

    </Application.Resources>
    
    
    
    

</interfacesApp:NativeUwpApplication>
