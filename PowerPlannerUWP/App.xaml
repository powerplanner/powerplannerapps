<interfacesApp:NativeUwpApplication
    xmlns:interfacesApp="using:InterfacesUWP.App"
    x:Class="PowerPlannerUWP.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:PowerPlannerUWP"
    xmlns:localconverters="using:PowerPlannerUWP.Converters"
    xmlns:converters="using:InterfacesUWP.Converters"
    xmlns:taskOrEventViews="using:PowerPlannerUWP.Views.TaskOrEventViews"
    xmlns:calendarViews="using:PowerPlannerUWP.Views.CalendarViews"
    xmlns:scheduleViews="using:PowerPlannerUWP.Views.ScheduleViews"
    xmlns:vxUwpViews="using:Vx.Uwp.Views">



    <Application.Resources>

        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <XamlControlsResources xmlns="using:Microsoft.UI.Xaml.Controls" />
                <ResourceDictionary Source="Themes/Generic.xaml"/>

                <ResourceDictionary>

                    <!--Colors used by buttons-->
                    <Color x:Key="SystemAccentColor">#546BC7</Color>
                    <Color x:Key="SystemAccentColorLight1">#4B60B3</Color>
                    <Color x:Key="SystemAccentColorDark1">#2E366D</Color>

                    <!--Temporary bug fix for https://github.com/microsoft/microsoft-ui-xaml/issues/2719-->
                    <Thickness x:Key="CalendarDatePickerTopHeaderMargin">0,0,0,4</Thickness>

                    <!--Reference UwpDataTemplateView so dynamically loading it with XamlReader works in .NET Native-->
                    <DataTemplate x:Name="UwpDataTemplateViewRef">
                        <vxUwpViews:UwpDataTemplateView/>
                    </DataTemplate>

                    <Style x:Key="WelcomeButtonStyle" TargetType="Button">
                        <Setter Property="Height" Value="40"/>
                        <Setter Property="HorizontalAlignment" Value="Stretch"/>
                        <Setter Property="Background" Value="{StaticResource PowerPlannerSecondaryBlue}"/>
                        <Setter Property="RequestedTheme" Value="Dark"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Grid x:Name="RootGrid" Background="{TemplateBinding Background}">
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualState x:Name="Normal">
                                                    <Storyboard>
                                                        <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="PointerOver">
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="RootGrid">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PowerPlannerBlueHover}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Pressed">
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="RootGrid">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PowerPlannerBlueSelected}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <PointerDownThemeAnimation Storyboard.TargetName="RootGrid"/>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Disabled">
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="RootGrid">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PowerPlannerDarkerBlue}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        <ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    
                    <Color x:Key="PowerPlannerBlueColor">#2E366D</Color>
                    <SolidColorBrush Color="{StaticResource PowerPlannerBlueColor}" x:Key="PowerPlannerBlue"/>
                    <SolidColorBrush x:Key="PowerPlannerSecondaryBlue" Color="#546BC7"/>
                    <SolidColorBrush x:Key="PowerPlannerBlueSelected" Color="#546BC7"/>
                    <SolidColorBrush x:Key="PowerPlannerBlueHover" Color="#4B60B3"/>
                    <SolidColorBrush x:Key="PowerPlannerDarkerBlue">#1F2656</SolidColorBrush>
                    <SolidColorBrush x:Key="TaskOrEventBrush" Color="#546BC7"/>

                    <Style x:Key="PowerPlannerBlueButtonStyle" TargetType="Button">
                        <Setter Property="Background" Value="{StaticResource PowerPlannerBlue}"/>
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="Padding" Value="11,7"/>
                        <Setter Property="FontWeight" Value="SemiBold"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Grid>
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualState x:Name="Normal"/>
                                                <VisualState x:Name="PointerOver">
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PowerPlannerBlueHover}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Pressed">
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PowerPlannerBlueSelected}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Disabled">
                                                    <Storyboard>
                                                        <!--<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonDisabledBackgroundThemeBrush}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Border">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonDisabledBorderThemeBrush}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonDisabledForegroundThemeBrush}"/>
                                                        </ObjectAnimationUsingKeyFrames>-->
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                            <VisualStateGroup x:Name="FocusStates">
                                                <VisualState x:Name="Focused">
                                                    <Storyboard>
                                                        <!--<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite"/>
                                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>-->
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Unfocused"/>
                                                <VisualState x:Name="PointerFocused"/>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        <Border x:Name="Border" Background="{TemplateBinding Background}">
                                            <ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Border>
                                        <!--<Rectangle x:Name="FocusVisualWhite" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="1.5" StrokeEndLineCap="Square" Stroke="{ThemeResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashArray="1,1"/>
                                        <Rectangle x:Name="FocusVisualBlack" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="0.5" StrokeEndLineCap="Square" Stroke="{ThemeResource FocusVisualBlackStrokeThemeBrush}" StrokeDashArray="1,1"/>-->
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="TransparentButtonStyle" TargetType="Button">
                        <Setter Property="Background" Value="{ThemeResource ApplicationForegroundThemeBrush}"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Grid>
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualState x:Name="Normal"/>
                                                <VisualState x:Name="PointerOver">
                                                    <VisualState.Setters>
                                                        <Setter Target="ButtonBackground.Opacity" Value="0.1" />
                                                    </VisualState.Setters>
                                                </VisualState>
                                                <VisualState x:Name="Pressed">
                                                    <VisualState.Setters>
                                                        <Setter Target="ButtonBackground.Opacity" Value="0.2" />
                                                    </VisualState.Setters>
                                                </VisualState>
                                                <VisualState x:Name="Disabled">
                                                    <Storyboard>
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                            <VisualStateGroup x:Name="FocusStates">
                                                <VisualState x:Name="Focused">
                                                    <Storyboard>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Unfocused"/>
                                                <VisualState x:Name="PointerFocused"/>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        <Grid x:Name="Border" Background="Transparent">
                                            <Rectangle
                                                x:Name="ButtonBackground"
                                                Opacity="0"
                                                Fill="{TemplateBinding Background}"/>
                                            <ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <SolidColorBrush x:Key="PowerPlannerCommandBarBackground">#1F2656</SolidColorBrush>

                    <Style x:Key="PowerPlannerCommandBarStyle" TargetType="CommandBar">
                        <Setter Property="Background" Value="{StaticResource PowerPlannerCommandBarBackground}"/>
                        <Setter Property="RequestedTheme" Value="Dark"/>
                    </Style>

                    <Style x:Key="PowerPlannerSecondaryBlueButtonStyle" TargetType="Button" BasedOn="{StaticResource PowerPlannerBlueButtonStyle}">
                        <Setter Property="Background" Value="{StaticResource PowerPlannerSecondaryBlue}"/>
                    </Style>

                    <Style x:Key="AddItemStyle" TargetType="Button" BasedOn="{StaticResource ItemContainerStyle}">
                        <Setter Property="ContentTemplate">
                            <Setter.Value>
                                <DataTemplate>
                                    <Grid Margin="2,4">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>

                                        <TextBlock
                                            Text="+"
                                            FontSize="50"
                                            FontWeight="SemiLight"
                                            Foreground="{ThemeResource ApplicationSecondaryForegroundThemeBrush}"
                                            VerticalAlignment="Center"
                                            Margin="9,0,8,6"
                                            TextLineBounds="Tight"/>

                                        <TextBlock
                                            Text="{Binding}"
                                            Style="{ThemeResource TitleTextBlockStyle}"
                                            FontSize="28"
                                            FontWeight="Light"
                                            Grid.Column="1"
                                            HorizontalAlignment="Center"
                                            Margin="0,0,4,0"/>
                                    </Grid>
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>



                    <Style x:Key="PageBoxStyle" TargetType="Border">
                        <Setter Property="Background" Value="#F4F4F4"/>
                    </Style>



                    <localconverters:IsCompleteToOpacityConverter x:Key="IsCompleteToOpacityConverter"/>
                    <localconverters:IsCompleteToVisibilityConverter x:Key="IsCompleteToVisibilityConverter"/>

                    <localconverters:CreditsToStringConverter x:Key="CreditsToStringConverter"/>




                    <converters:ColorArrayToColorConverter x:Key="ColorArrayToColorConverter"/>
                    <converters:ColorArrayToBrushConverter x:Key="ColorArrayToBrushConverter"/>
                    <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
                    <converters:StringToVisibilityConverter x:Key="StringToVisibilityConverter"/>
                    <converters:TimeSpanToDateTimeConverter x:Key="TimeSpanToDateTimeConverter"/>
                    <converters:ListToVisibilityConverter x:Key="ListToVisibilityConverter"/>
                    <converters:DateToLongDateConverter x:Key="DateToLongDateConverter"/>
                    <converters:DoubleToBlankStringConverter x:Key="DoubleToBlankStringConverter"/>
                    <converters:NumberToFormatConverter x:Key="NumberToFormatConverter"/>
                    <converters:DateToStringConverter x:Key="DateToStringConverter"/>
                    <converters:ColorToBrushConverter x:Key="ColorToBrushConverter"/>
                    <converters:InvertBoolConverter x:Key="InvertBoolConverter"/>
                    <converters:DayOfWeekToStringConverter x:Key="DayOfWeekToStringConverter"/>
                    <converters:NotNullToVisibilityConverter x:Key="NotNullToVisibilityConverter"/>
                    <converters:DateToTimeConverter x:Key="DateToTimeConverter"/>
                    <converters:StringToUpperCaseConverter x:Key="StringToUpperCaseConverter"/>
                    <converters:EnumToVisibilityConverter x:Key="EnumToVisibilityConverter"/>


                    <Style x:Key="BlankListViewItemContainerStyle" TargetType="ListViewItem">
                        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
                        <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="TabNavigation" Value="Local"/>
                        <Setter Property="IsHoldingEnabled" Value="True"/>
                        <Setter Property="Margin" Value="0"/>
                        <Setter Property="Padding" Value="0"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        <Setter Property="VerticalContentAlignment" Value="Top"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListViewItem">
                                    <ListViewItemPresenter ContentMargin="0" ContentTransitions="{TemplateBinding ContentTransitions}" DragForeground="{ThemeResource ListViewItemDragForegroundThemeBrush}" DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}" DragBackground="{ThemeResource ListViewItemDragBackgroundThemeBrush}" DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="0" PointerOverBackgroundMargin="0" PlaceholderBackground="{ThemeResource ListViewItemPlaceholderBackgroundThemeBrush}" PointerOverBackground="Transparent" ReorderHintOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" SelectionCheckMarkVisualEnabled="False" SelectedForeground="{TemplateBinding Foreground}" SelectedPointerOverBackground="Transparent" SelectedBorderThickness="0" SelectedBackground="Transparent" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" BorderThickness="0"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="BlankListViewStyle" TargetType="ListView">
                        <Setter Property="ItemContainerStyle" Value="{StaticResource BlankListViewItemContainerStyle}"/>
                        <Setter Property="SelectionMode" Value="None"/>
                        <Setter Property="IsSwipeEnabled" Value="False"/>
                    </Style>


                    <DataTemplate x:Key="MainCalendarItemTemplate">
                        <calendarViews:MainCalendarItemView />
                    </DataTemplate>

                    <DataTemplate x:Key="DataTemplateHolidayScheduleItem">
                        <scheduleViews:HolidayScheduleItemView />
                    </DataTemplate>

                    <Style x:Key="DestructiveButtonStyle" TargetType="Button" BasedOn="{StaticResource AccentButtonStyle}">
                        <Setter Property="Background" Value="#00000000"/>
                        <Setter Property="Foreground" Value="#8B0000"/>
                        <Setter Property="BorderBrush" Value="#8B0000"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" BackgroundSizing="{TemplateBinding BackgroundSizing}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" CornerRadius="{TemplateBinding CornerRadius}" ContentTransitions="{TemplateBinding ContentTransitions}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualState x:Name="Normal">
                                                    <Storyboard>
                                                        <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter"/>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="PointerOver">
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="#22000000"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter"/>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Pressed">
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="#44000000"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <PointerDownThemeAnimation Storyboard.TargetName="ContentPresenter"/>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Disabled">
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonDisabledBackgroundThemeBrush}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBorderBrushDisabled}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonDisabledForegroundThemeBrush}"/>
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                    </ContentPresenter>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>

    </Application.Resources>
    
    
    
    

</interfacesApp:NativeUwpApplication>
