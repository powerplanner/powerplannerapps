<views:PopupViewHostGeneric
    x:Name="ThisPage"
    xmlns:views="using:PowerPlannerUWP.Views"
    x:Class="PowerPlannerUWP.Views.AddHomeworkView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:PowerPlannerUWP.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:interfaces="using:InterfacesUWP"
    mc:Ignorable="d"
    xmlns:localControls="using:PowerPlannerUWP.Controls">

    <views:PopupViewHostGeneric.PrimaryCommands>

        <AppBarButton
            x:Uid="AppBarButtonSave"
                x:Name="ButtonSave"
                Icon="Save"
                Label="Save"
                Click="ButtonSave_Click"/>

    </views:PopupViewHostGeneric.PrimaryCommands>

    <views:PopupViewHostGeneric.MainContent>
        <ScrollViewer x:Name="MainScrollViewer" Grid.Row="1" VerticalScrollBarVisibility="Auto">
            <StackPanel Margin="9,6">
                <TextBox
                    x:Uid="EditHomeworkPage_TextBoxName"
                    x:Name="tbName"
                    Grid.Row="1"
                    Header="Name"
                    Loaded="TbName_Loaded"
                    InputScope="Default"
                    IsSpellCheckEnabled="True"
                    IsTextPredictionEnabled="True"
                    KeyUp="TbName_KeyUp"
                    Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Margin="0,0,0,6"/>

                <interfaces:MyAdaptiveGridPanel MinColumnWidth="236" Margin="-6,0,-6,0" StretchIfOnlyOneChild="True">

                    <CalendarDatePicker
                        x:Uid="EditHomeworkPage_DatePickerDate"
                        x:Name="datePickerDate"
                        Header="Date"
                        Margin="6"
                        HorizontalAlignment="Stretch"
                        DateChanged="DatePickerDate_DateChanged"
                        Visibility="{Binding IsDatePickerVisible, Converter={StaticResource BoolToVisibilityConverter}}"/>

                    <ComboBox
                        x:Uid="EditHomeworkPage_ComboBoxClasses"
                        x:Name="comboBoxClasses"
                        Grid.Column="1"
                        Header="Class"
                        Margin="6"
                        ItemTemplate="{StaticResource DataTemplateClassPicker}"
                        HorizontalAlignment="Stretch"
                        ItemsSource="{Binding Classes}"
                        SelectedItem="{Binding Class, Mode=TwoWay}"
                        Visibility="{Binding IsClassPickerVisible, Converter={StaticResource BoolToVisibilityConverter}}">
                    </ComboBox>

                </interfaces:MyAdaptiveGridPanel>

                <interfaces:MyAdaptiveGridPanel MinColumnWidth="236" Margin="-6,0,-6,0" StretchIfOnlyOneChild="True">

                    <ComboBox
                        x:Uid="EditHomeworkPage_ComboBoxWeightCategory"
                        x:Name="ComboBoxWeightCategory"
                        Header="Grade Weight Category"
                        Margin="6"
                        DisplayMemberPath="Name"
                        HorizontalAlignment="Stretch"
                        ItemsSource="{Binding WeightCategories}"
                        SelectedItem="{Binding SelectedWeightCategory, Mode=TwoWay}"
                        Visibility="{Binding IsWeightCategoryPickerVisible, Converter={StaticResource BoolToVisibilityConverter}}"/>

                    <ComboBox
                        x:Name="ComboBoxTimeOptions"
                        Grid.Column="1"
                        Header="Time"
                        Margin="6"
                        HorizontalAlignment="Stretch"
                        ItemsSource="{Binding TimeOptions}"
                        SelectedItem="{Binding SelectedTimeOption, Mode=TwoWay}">
                    </ComboBox>

                </interfaces:MyAdaptiveGridPanel>

                <interfaces:MyAdaptiveGridPanel MinColumnWidth="236" Margin="-6,0,-6,0">

                    <TimePicker
                        x:Name="TimePickerStartTime"
                        Header="Start time"
                        Margin="6"
                        HorizontalAlignment="Stretch"
                        Visibility="{Binding IsStartTimePickerVisible, Converter={StaticResource BoolToVisibilityConverter}}"
                        Time="{Binding StartTime, Mode=TwoWay}"/>

                    <TimePicker
                        x:Name="TimePickerEndTime"
                        Header="End time"
                        Grid.Column="1"
                        Margin="6"
                        HorizontalAlignment="Stretch"
                        Visibility="{Binding IsEndTimePickerVisible, Converter={StaticResource BoolToVisibilityConverter}}"
                        Time="{Binding EndTime, Mode=TwoWay}"/>

                </interfaces:MyAdaptiveGridPanel>

                <TextBox
                    x:Uid="EditHomeworkPage_TextBoxDetails"
                    x:Name="tbDetails"
                    Header="Details"
                    AcceptsReturn="True"
                    TextWrapping="Wrap"
                    MinHeight="100"
                    Margin="0,6"
                    IsSpellCheckEnabled="True"
                    IsTextPredictionEnabled="True"
                    Text="{Binding Details, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                <CheckBox
                    x:Name="CheckBoxRepeats"
                    x:Uid="RepeatingEntry_CheckBoxRepeats"
                    Margin="0,6"
                    IsChecked="{Binding Repeats, Mode=TwoWay}"
                    Visibility="{Binding IsRepeatsVisible, Converter={StaticResource BoolToVisibilityConverter}}"/>

                <Border
                    x:Name="RecurrenceControlContainer"
                    Background="{ThemeResource TextControlBackgroundPointerOver}"
                    Padding="12"
                    Margin="0,0,0,6"
                    Visibility="{Binding Repeats, Converter={StaticResource BoolToVisibilityConverter}}"
                    x:DeferLoadStrategy="Lazy">
                    <StackPanel>
                        <TextBlock
                            x:Uid="RepeatingEntry_TextBlockTryForFree"
                            Style="{ThemeResource BaseTextBlockStyle}"
                            Foreground="Red"
                            Margin="0,0,0,12"
                            Visibility="{Binding ShowRepeatingPremiumTrial, Converter={StaticResource BoolToVisibilityConverter}}"/>
                        <StackPanel Visibility="{Binding ShowRepeatingMustUpgradeToPremium, Converter={StaticResource BoolToVisibilityConverter}}">
                            <TextBlock
                                x:Uid="RepeatingEntry_TextBlockMustUpgrade"
                                Style="{ThemeResource BaseTextBlockStyle}"
                                Foreground="Red"
                                Margin="0,0,0,12"/>
                            <Button
                                x:Uid="Settings_UpgradeToPremium_ButtonUpgrade"
                                x:Name="ButtonUpgradeToPremiumForRepeating"
                                Click="ButtonUpgradeToPremiumForRepeating_Click"
                                Style="{StaticResource WelcomeButtonStyle}"
                                HorizontalAlignment="Stretch"
                                Margin="0,0,0,24"/>
                        </StackPanel>
                        <localControls:RecurrenceControl
                            DataContext="{Binding RecurrenceControlViewModel, Mode=OneTime}"
                            IsEnabled="{Binding DataContext.IsRepeatingEntryEnabled, ElementName=ThisPage}"/>
                        <TextBlock
                            x:Uid="RepeatingEntry_TextBlockNoteCannotBulkEdit"
                            Style="{ThemeResource CaptionTextBlockStyle}"
                            TextWrapping="Wrap"
                            Margin="0,12,0,0"/>
                    </StackPanel>
                </Border>

                <TextBlock
                    x:Name="TextBlockImageAttachments"
                    Text="Image attachments"
                    Margin="0,6"/>

                <views:EditImagesWrapGrid
                    x:Name="editImages"
                    Margin="0,0,0,6"
                    ImageAttachments="{Binding ImageAttachments}"
                    RequestedAddImage="EditImages_RequestedAddImage"/>

            </StackPanel>
        </ScrollViewer>
    </views:PopupViewHostGeneric.MainContent>
</views:PopupViewHostGeneric>