<interfacesViews:ViewHostGeneric
    x:Name="ThisView"
    xmlns:interfacesViews="using:InterfacesUWP.Views"
    x:Class="PowerPlannerUWP.Views.MainScreenView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:PowerPlannerUWP.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    d:DesignHeight="300"
    d:DesignWidth="400"
    xmlns:localConverters="using:PowerPlannerUWP.Converters"
    xmlns:sideBarViews="using:PowerPlannerUWP.Views.SideBarViews"
    xmlns:interfacesViewPresenters="using:InterfacesUWP.ViewModelPresenters"
    SizeChanged="thisPage_SizeChanged">

    <interfacesViews:ViewHostGeneric.Resources>

        <DataTemplate x:Key="SideBarCompactHeaderNormalTemplate">
            <TextBlock
                Text="{Binding Converter={StaticResource MainMenuItemToStringConverter}}"
                Style="{StaticResource SideBarOptionTextStyle}"/>
        </DataTemplate>

        <DataTemplate x:Key="SideBarCompactHeaderClassTemplate">
            <TextBlock
                Text="{Binding Name}"
                Style="{StaticResource SideBarOptionTextStyle}"/>
        </DataTemplate>

        <localConverters:MainMenuItemToStringConverter x:Key="MainMenuItemToStringConverter"/>

    </interfacesViews:ViewHostGeneric.Resources>

    <Grid Background="{ThemeResource PowerPlannerBlue}">
        <Grid.ChildrenTransitions>
            <TransitionCollection>
                <EntranceThemeTransition/>
            </TransitionCollection>
        </Grid.ChildrenTransitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition x:Name="firstColumn" Width="220"/>
            <ColumnDefinition x:Name="secondColumn" Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition x:Name="rowTop" Height="150"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>


        <ProgressBar
            x:Name="progressBar"
            Style="{StaticResource WhiteProgressBarStyle}"
            IsIndeterminate="True"
            VerticalAlignment="Top"
            Visibility="Collapsed"
            Opacity="0"/>

        <ProgressBar
            x:Name="progressBarUploadImages"
            Foreground="White"
            Background="Transparent"
            VerticalAlignment="Top"
            Visibility="Collapsed"
            Opacity="0"
            Maximum="1"
            Value="{Binding UploadImageProgress}"/>


        <!--Icon and other top stuff-->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="columnIcon" Width="*"/>
                <ColumnDefinition x:Name="columnSelectedItem" Width="0"/>
            </Grid.ColumnDefinitions>

            <Grid HorizontalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <Image
                    Source="/Assets/Logo.png"
                    Stretch="Uniform"
                    x:Name="logo"
                    Tapped="logo_Tapped"
                    Margin="24"/>

                <AppBarButton
                    x:Name="ButtonCompactHamburger"
                    Visibility="Collapsed"
                    Click="ButtonOpenMenu_Click">

                    <TextBlock
                        Text="&#xE700;"
                        FontFamily="Segoe MDL2 Assets"
                        HorizontalAlignment="Center"
                        Foreground="White"/>

                </AppBarButton>

                <!--<SymbolIcon Symbol="Important" RequestedTheme="Dark" Grid.Column="1"/>-->
                <AppBarButton
                    IsCompact="True"
                    Icon="Important"
                    RequestedTheme="Dark"
                    HorizontalAlignment="Center"
                    Grid.Column="1"
                    VerticalAlignment="Center"
                    Margin="-28,-10,0,0"
                    Visibility="{Binding HasSyncErrors, Converter={StaticResource BoolToVisibilityConverter}}"
                    x:Name="syncErrorIndicator"
                    Click="syncErrorIndicator_Click"/>

            </Grid>


            <TextBlock
                x:Name="textBlockOffline"
                Text="Offline"
                Style="{StaticResource BaseTextBlockStyle}"
                Foreground="White"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                Margin="8,2"
                Visibility="{Binding IsOffline, Converter={StaticResource BoolToVisibilityConverter}}"/>



            <!--ContentTemplate will be set programatically-->
            <ContentPresenter
                x:Name="compactSelectedItem"
                Visibility="Collapsed"
                Grid.Column="1"
                VerticalAlignment="Center"
                HorizontalAlignment="Left"
                Margin="-24,0,0,0"/>

        </Grid>

        <Grid
            x:Name="ContentPane"
            Grid.Column="1"
            Grid.RowSpan="2"
            Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <Border
                x:Name="CommandBarForContentContainer">
                <CommandBar
                    x:Name="CommandBarForContent"
                    Style="{StaticResource PowerPlannerCommandBarStyle}">

                    <CommandBar.Content>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <AppBarButton
                                x:Name="ButtonOpenMenu"
                                HorizontalContentAlignment="Center"
                                Visibility="Collapsed"
                                Click="ButtonOpenMenu_Click">

                                <TextBlock
                                    Text="&#xE700;"
                                    FontFamily="Segoe MDL2 Assets"
                                    HorizontalAlignment="Center"/>

                            </AppBarButton>

                            <ContentControl
                                x:Name="CommandBarContentContainer"
                                Grid.Column="1"
                                RequestedTheme="Dark"/>

                        </Grid>

                    </CommandBar.Content>

                </CommandBar>
            </Border>

            <!--Content-->
            <interfacesViewPresenters:PagedViewModelPresenter
                x:Name="ContentPresenter"
                Grid.Row="1"
                Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
                ViewModel="{Binding}"
                RequestedTheme="Default"/>

        </Grid>

        <!--Menu items-->
        <sideBarViews:SideBarMenuItemsView
            x:Name="sideBarMenuItems"
            Grid.Row="1"
            VerticalAlignment="Stretch"
            MenuItemsModel="{Binding}"
            RequestClose="sideBarMenuItems_RequestClose"/>

        <!--Popups-->
        <interfacesViewPresenters:PopupsPresenter
                Grid.RowSpan="2"
                Grid.ColumnSpan="2"
                ViewModel="{Binding}"
                RequestedTheme="Default"/>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="ViewStates">
                <VisualState x:Name="PrimaryView">

                    <!--Code programmatically changes these while in compact mode, so we need to make sure they're reset correctly in full mode-->
                    <VisualState.Setters>
                        <Setter Target="sideBarMenuItems.Visibility" Value="Visible"/>
                        <Setter Target="ContentPane.Visibility" Value="Visible"/>
                    </VisualState.Setters>

                </VisualState>

                <VisualState x:Name="CompactView">

                    <VisualState.Setters>

                        <!--Hide the menu items-->
                        <Setter Target="sideBarMenuItems.Visibility" Value="Collapsed"/>

                        <!--Make sure content is visible initially-->
                        <Setter Target="ContentPane.Visibility" Value="Visible"/>

                        <!--Move the ContentPane to Column 0, Row 1, and only 1 RowSpan-->
                        <Setter Target="ContentPane.(Grid.Column)" Value="0"/>
                        <Setter Target="ContentPane.(Grid.RowSpan)" Value="1"/>
                        <Setter Target="ContentPane.(Grid.Row)" Value="1"/>

                        <!--Make the first column fill the width-->
                        <Setter Target="firstColumn.Width" Value="*"/>
                        <Setter Target="secondColumn.Width" Value="0"/>

                        <!--Adjust the icon column to display the selected item on the right-->
                        <Setter Target="columnIcon.Width" Value="Auto"/>
                        <Setter Target="columnSelectedItem.Width" Value="*"/>

                        <!--And show the compact selected item-->
                        <Setter Target="compactSelectedItem.Visibility" Value="Visible"/>


                        <!--And reduce the height of the top section-->
                        <Setter Target="rowTop.Height" Value="48"/>


                        <!--Move the menu to the left 16 pixels so that text has a 20 px margin from the left (cheap hack, but it works perfectly)-->
                        <Setter Target="sideBarMenuItems.Margin" Value="-16,0,0,0"/>


                        <!--Move the Offline text to the right-->
                        <Setter Target="textBlockOffline.HorizontalAlignment" Value="Right"/>
                        <Setter Target="textBlockOffline.(Grid.Column)" Value="1"/>

                        <Setter Target="logo.Visibility" Value="Collapsed"/>
                        <Setter Target="ButtonCompactHamburger.Visibility" Value="Visible"/>

                    </VisualState.Setters>

                    <Storyboard>

                        <!--<ObjectAnimationUsingKeyFrames Storyboard.TargetName="contentBox" Storyboard.TargetProperty="(Grid.Column)">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="contentBox" Storyboard.TargetProperty="(Grid.RowSpan)">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="contentBox" Storyboard.TargetProperty="(Grid.Row)">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                        </ObjectAnimationUsingKeyFrames>-->



                    </Storyboard>
                </VisualState>
            </VisualStateGroup>


            <VisualStateGroup x:Name="DeviceFamilyStates">

                <VisualState x:Name="DesktopState"/>

                <VisualState x:Name="MobileState">
                    <VisualState.Setters>

                        <!--Show the menu button-->
                        <Setter Target="ButtonOpenMenu.Visibility" Value="Visible"/>

                        <!--Move the command bar to the bottom-->
                        <Setter Target="CommandBarForContentContainer.(Grid.Row)" Value="2"/>
                    </VisualState.Setters>
                </VisualState>

            </VisualStateGroup>

        </VisualStateManager.VisualStateGroups>

    </Grid>
    
</interfacesViews:ViewHostGeneric>
